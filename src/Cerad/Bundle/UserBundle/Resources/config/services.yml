parameters:
#    cerad_user.example.class: Cerad\Bundle\UserBundle\Example

services:
  
    # ======================================================
    # Security stuff
    cerad_user.entity_manager.doctrine:
        alias: doctrine.orm.default_entity_manager

    cerad_user.user_repository.doctrine:
        class:  Cerad\Bundle\UserBundle\Entity\UserRepository
        factory_service: 'cerad_user.entity_manager.doctrine'
        factory_method:  'getRepository'
        arguments:  
            - 'Cerad\Bundle\UserBundle\Entity\User'
            
    cerad_user.user_manager.doctrine:
        class:  Cerad\Bundle\UserBundle\Entity\UserManager
        arguments:
            - '@security.encoder_factory'
            - '@cerad_user.user_repository.doctrine'
            
    cerad_user.user_encoder:
        class:  Cerad\Bundle\UserBundle\Security\UserEncoder
        arguments:
            - '%cerad_user_master_password%'
      
    # ======================================================
    # Validators
    cerad_user.email_unique.validator:
        class:  Cerad\Bundle\UserBundle\Validator\Constraints\EmailUniqueValidator
        arguments:
            - '@cerad_user.user_manager.doctrine'
        tags:
            - { name: validator.constraint_validator, alias: cerad_user_email_unique } 
            
    cerad_user.email_exists.validator:
        class:  Cerad\Bundle\UserBundle\Validator\Constraints\EmailExistsValidator
        arguments:
            - '@cerad_user.user_manager.doctrine'
        tags:
            - { name: validator.constraint_validator, alias: cerad_user_email_exists }  
            
    cerad_user.username_unique.validator:
        class:  Cerad\Bundle\UserBundle\Validator\Constraints\UsernameUniqueValidator
        arguments:
            - '@cerad_user.user_manager.doctrine'
        tags:
            - { name: validator.constraint_validator, alias: cerad_user_username_unique } 
            
    cerad_user.username_and_email_unique.validator:
        class:  Cerad\Bundle\UserBundle\Validator\Constraints\UsernameAndEmailUniqueValidator
        arguments:
            - '@cerad_user.user_manager.doctrine'
        tags:
            - { name: validator.constraint_validator, alias: cerad_user_username_and_email_unique }   
            
    cerad_user.username_exists.validator:
        class:  Cerad\Bundle\UserBundle\Validator\Constraints\UsernameExistsValidator
        arguments:
            - '@cerad_user.user_manager.doctrine'
        tags:
            - { name: validator.constraint_validator, alias: cerad_user_username_exists }   
            
    cerad_user.username_or_email_exists.validator:
        class:  Cerad\Bundle\UserBundle\Validator\Constraints\UsernameOrEmailExistsValidator
        arguments:
            - '@cerad_user.user_manager.doctrine'
        tags:
            - { name: validator.constraint_validator, alias: cerad_user_username_or_email_exists }   

    # ====================================================
    # Form Types
    cerad_user.username_unique.form_type:
        class:  Cerad\Bundle\UserBundle\Form\Type\UsernameUniqueFormType
        tags:
            - { name: form.type, alias: cerad_user_username_unique } 
            
    cerad_user.username_exists.form_type:
        class:  Cerad\Bundle\UserBundle\Form\Type\UsernameExistsFormType
        tags:
            - { name: form.type, alias: cerad_user_username_exists } 
            
    cerad_user.email_unique.form_type:
        class:  Cerad\Bundle\UserBundle\Form\Type\EmailUniqueFormType
        tags:
            - { name: form.type, alias: cerad_user_email_unique } 
            
    cerad_user.email_exists.form_type:
        class:  Cerad\Bundle\UserBundle\Form\Type\EmailExistsFormType
        tags:
            - { name: form.type, alias: cerad_user_email_exists } 
            
